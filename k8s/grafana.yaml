apiVersion: apps/v1
kind: Deployment
metadata:
  name: grafana
  namespace: openlogistics
spec:
  replicas: 1
  selector:
    matchLabels:
      app: grafana
  template:
    metadata:
      labels:
        app: grafana
    spec:
      containers:
      - name: grafana
        image: grafana/grafana:latest
        ports:
        - containerPort: 3000
        env:
        - name: GF_SECURITY_ADMIN_PASSWORD
          valueFrom:
            secretKeyRef:
              name: grafana-secrets
              key: admin-password
        - name: GF_INSTALL_PLUGINS
          value: "grafana-piechart-panel,grafana-worldmap-panel"
        volumeMounts:
        - name: grafana-storage
          mountPath: /var/lib/grafana
        - name: grafana-config
          mountPath: /etc/grafana/provisioning
        resources:
          requests:
            memory: "256Mi"
            cpu: "100m"
          limits:
            memory: "1Gi"
            cpu: "500m"
      volumes:
      - name: grafana-storage
        persistentVolumeClaim:
          claimName: grafana-pvc
      - name: grafana-config
        configMap:
          name: grafana-config
---
apiVersion: v1
kind: Secret
metadata:
  name: grafana-secrets
  namespace: openlogistics
type: Opaque
data:
  admin-password: $(echo -n "admin123" | base64)
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: grafana-config
  namespace: openlogistics
data:
  datasources.yml: |
    apiVersion: 1
    datasources:
    - name: Prometheus
      type: prometheus
      access: proxy
      url: http://prometheus-service:9090
      isDefault: true
      editable: true

  dashboards.yml: |
    apiVersion: 1
    providers:
    - name: 'default'
      orgId: 1
      folder: ''
      type: file
      disableDeletion: false
      updateIntervalSeconds: 10
      options:
        path: /var/lib/grafana/dashboards

  open-logistics-dashboard.json: |
    {
      "dashboard": {
        "id": null,
        "title": "Open Logistics Dashboard",
        "tags": ["open-logistics"],
        "timezone": "browser",
        "panels": [
          {
            "id": 1,
            "title": "Optimization Performance",
            "type": "graph",
            "targets": [
              {
                "expr": "rate(optimization_requests_total[5m])",
                "legendFormat": "Requests/sec"
              }
            ]
          },
          {
            "id": 2,
            "title": "Prediction Accuracy",
            "type": "stat",
            "targets": [
              {
                "expr": "prediction_accuracy_ratio",
                "legendFormat": "Accuracy"
              }
            ]
          },
          {
            "id": 3,
            "title": "System Resources",
            "type": "graph",
            "targets": [
              {
                "expr": "rate(container_cpu_usage_seconds_total[5m])",
                "legendFormat": "CPU Usage"
              },
              {
                "expr": "container_memory_usage_bytes",
                "legendFormat": "Memory Usage"
              }
            ]
          }
        ],
        "time": {
          "from": "now-1h",
          "to": "now"
        },
        "refresh": "5s"
      }
    }
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: grafana-pvc
  namespace: openlogistics
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi
  storageClassName: fast-ssd
---
apiVersion: v1
kind: Service
metadata:
  name: grafana-service
  namespace: openlogistics
spec:
  selector:
    app: grafana
  ports:
  - port: 3000
    targetPort: 3000
  type: ClusterIP
